//�������� Ŭ����
create table bitclass(
  class_code number primary key,
  total_date number not null,
  class_name varchar(100)not null
);

insert into BITCLASS values(1,120,'Spring FrameWork ');

select * from BITCLASS;

//??
create table subject(
  sub_name varchar(100) primary key
);

select * from SUBJECT;
//??
create table cclass(
  c_seq number primary key,
  class_code number not null
  CONSTRAINT bitclass_class_code_fk REFERENCES bitclass(class_code),
  sub_name varchar(100) not null
  CONSTRAINT subject_sub_name_fk REFERENCES subject(sub_name),
  start_date date,
  end_date date
);

//c_seq ������
create sequence c_seq start with 1;

//�л�
create table student(
  s_id varchar(100) primary key,
  s_img varchar(200) ,
  s_uuid_img varchar(500) ,
  s_seq number not null,
  s_pw varchar(200) not null,
  s_name varchar(100) not null,
  s_email varchar(200)not null,
  s_phone number not null,
  git_id varchar(100),
  git_pw varchar(100),
   s_class_code number not null
  CONSTRAINT bitclass_class_code_fk1 REFERENCES bitclass(class_code)
);


//s_seq ������
create SEQUENCE s_seq start with 1;

select *from student;

//���� ������Ʈ
create table Pboard(
  p_boardseq number primary key,
  p_title varchar(200) not null,
  p_content varchar(500)not null,
  p_filename varchar(200),
  p_uuidname varchar(500),
  p_date date default SYSDATE,
  p_category varchar(100) not null, 
  s_id varchar(100)not null
  CONSTRAINT student_s_id_fk REFERENCES student(s_id)
);

//p_boardseq ������
create SEQUENCE p_boardseq start with 1;


select * from PBOARD;

//�׷���� �� ����Ʈ
create table cgroup(
  group_seq number primary key,
  pw varchar(200) not null,
  title varchar(100)not null,
  info varchar(100),
  s_id varchar(100)not null
  CONSTRAINT student_s_id_fk1 REFERENCES student(s_id)
);

//group_seq  ������
create SEQUENCE group_seq start with 1;

select * from cgroup;

select * from cgroup,student where cgroup.G_ID=student.S_ID;

//�׷�������Ʈ
create table gboard(
  g_boardseq number primary key,
  g_title varchar(200) not null,
  g_content varchar(500)not null,
  g_upload varchar(200),
  g_date date default SYSDATE,
  group_seq number not null
  CONSTRAINT cgroup_group_seq_fk REFERENCES cgroup(group_seq)
);

//g_boardseq ������
create SEQUENCE g_boardseq start with 1;

select * from gboard;

//�׷� �Ҽ�
create table groupin(
  gin_seq number primary key,
  group_seq number not null
  CONSTRAINT cgroup_group_seq_fk1 REFERENCES cgroup(group_seq),
  s_id varchar(100)not null
  CONSTRAINT student_s_id_fk2 REFERENCES student(s_id),
  g_date date default SYSDATE
);

//gom_seq ������
create sequence gin_seq start with 1;


//���θ޸�
create table pmemo(
  m_seq number primary key,
  m_title varchar(100) not null,
  m_content varchar(500) not null,
  s_id varchar(20) not null
 CONSTRAINT student_s_id_fk3 REFERENCES student(s_id)
);

//m_seq ������
create sequence m_seq start with 1;

select * from pmemo;
//�׷�޸�

create table gmemo(
  gm_seq number primary key,
  m_title varchar(100) not null,
  m_content varchar(500) not null,
  group_seq number not null
 CONSTRAINT cgroup_group_seq_fk3 REFERENCES cgroup(group_seq)
);

//gm_seq ������
create sequence gm_seq start with 1;

select * from gmemo;

create table qna(
  q_seq number primary key,
  q_title varchar(100) not null,
  q_content varchar(500) not null,
  q_readcount number not null,
  q_upload varchar(200),
  q_image varchar(200),
  q_category varchar(20) not null,
  s_id varchar(20) not null
  CONSTRAINT student_s_id_fk4 REFERENCES student(s_id)
);
create sequence q_seq start with 1;

select * from qna;

create table reqna(
  re_seq number primary key,
  re_writer varchar(50) not null,
  re_content varchar(500) not null,
  q_seq number not null
  CONSTRAINT qna_q_seq_fk REFERENCES qna(q_seq)
  ON DELETE CASCADE
);

create sequence re_seq start with 1;

insert into reqna values(re_seq.nextval, 'JINU', 'HELLO WORLD', 1);

select * from reqna;

create table gminutes(
  min_seq number primary key,
  min_date VARCHAR2(200) not null,
  min_attendee VARCHAR2(200) not null,
  min_subject VARCHAR2(200) not null,
  min_content varchar2(500) not null,
  min_opinion varchar2(500),
  min_decide varchar2(500),
  min_schedule varchar2(500),
  min_prepare varchar2(500),
  group_seq number not null
 CONSTRAINT cgroup_group_seq_fk4 REFERENCES cgroup(group_seq)
);

select * from gminutes;

create SEQUENCE min_seq start with 1;

create table ggantt(
	gan_seq number primary key,
	gan_data LONG not null,
	group_seq number not null
	CONSTRAINT cgroup_group_seq_fk5 REFERENCES cgroup(group_seq)
);

create SEQUENCE gan_seq start with 1;

select * from ggantt;

create table todo(
   todo_seq number primary key,
   todo varchar2(200),
   todo_id varchar2(20)
   CONSTRAINT student_s_id_fk5 REFERENCES student(s_id)
);

create SEQUENCE todo_seq start with 1;

create table sub_subject(
   sub_subject_seq number primary key,
   sub varchar2(100),
   sub_name varchar2(100)
   CONSTRAINT subject_sub_name_fk1 REFERENCES subject(sub_name)
);

create SEQUENCE sub_subject_seq start with 1;


insert into subject values('JAVA');
insert into cclass values(c_seq.nextval,1,'JAVA',to_date('2017-03-06', 'yyyy-mm-dd'),to_date('2017-03-17','yyyy-mm-dd'));
insert into sub_subject values(sub_subject_seq.nextval,'변수와 연산자','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'조건과 반복','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'클래스와 객체','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'필드와 메소드','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'생성자와 접근제어','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'배열','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'상속','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'인터페이스','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'패키지','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'예외처리','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'제네릭','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'스레드','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'입출력','JAVA');
insert into sub_subject values(sub_subject_seq.nextval,'네트워킹','JAVA');


insert into subject values('DBMS');
insert into cclass values(c_seq.nextval,1,'DBMS',to_date('2017-03-20', 'yyyy-mm-dd'),to_date('2017-03-24','yyyy-mm-dd'));
insert into sub_subject values(sub_subject_seq.nextval,'DB개념및설치','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'SQL기본','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'SQLPLUS 명령어','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'DB개념및설치','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'SELECT 사용법','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'SQL 주요함수','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'그룹함수','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'조인','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'서브쿼리','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'DDL','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'DML','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'트랜잭션','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'제약조건','DBMS');
insert into sub_subject values(sub_subject_seq.nextval,'가상테이블 VIEW','DBMS');

insert into subject values('JSP');
insert into cclass values(c_seq.nextval,1,'JSP',to_date('2017-03-27', 'yyyy-mm-dd'),to_date('2017-04-06','yyyy-mm-dd'));
insert into sub_subject values(sub_subject_seq.nextval,'웹프로그래밍 이해','JSP');
insert into sub_subject values(sub_subject_seq.nextval,'JDK','JSP');
insert into sub_subject values(sub_subject_seq.nextval,'JSP동작원리 및 서블릿','JSP');
insert into sub_subject values(sub_subject_seq.nextval,'스크립트','JSP');
insert into sub_subject values(sub_subject_seq.nextval,'JSP 기초문법','JSP');
insert into sub_subject values(sub_subject_seq.nextval,'JSP 지시자와 태그','JSP');
insert into sub_subject values(sub_subject_seq.nextval,'JSP 내부객체','JSP');
insert into sub_subject values(sub_subject_seq.nextval,'자바 빈즈','JSP');
insert into sub_subject values(sub_subject_seq.nextval,'JDBC로 DB연동','JSP');
insert into sub_subject values(sub_subject_seq.nextval,'홈페이지 구축','JSP');

insert into subject values('XML');
insert into cclass values(c_seq.nextval,1,'XML',to_date('2017-04-10', 'yyyy-mm-dd'),to_date('2017-04-12','yyyy-mm-dd'));
insert into sub_subject values(sub_subject_seq.nextval,'XML개념','XML');
insert into sub_subject values(sub_subject_seq.nextval,'관련기술비교','XML');
insert into sub_subject values(sub_subject_seq.nextval,'XML표준안','XML');
insert into sub_subject values(sub_subject_seq.nextval,'XML용도','XML');

insert into subject values('JPA/hibernate');
insert into cclass values(c_seq.nextval,1,'JPA/hibernate',to_date('2017-04-13', 'yyyy-mm-dd'),to_date('2017-04-19','yyyy-mm-dd'));
insert into sub_subject values(sub_subject_seq.nextval,'JPA','JPA/hibernate');
insert into sub_subject values(sub_subject_seq.nextval,'필드와컬럼매핑','JPA/hibernate');
insert into sub_subject values(sub_subject_seq.nextval,'식별자 매핑','JPA/hibernate');
insert into sub_subject values(sub_subject_seq.nextval,'연관관계 매핑','JPA/hibernate');


insert into subject values('Spring');
insert into cclass values(c_seq.nextval,1,'Spring',to_date('2017-04-20', 'yyyy-mm-dd'),to_date('2017-05-11','yyyy-mm-dd'));
insert into sub_subject values(sub_subject_seq.nextval,'스프링 DI','Spring');
insert into sub_subject values(sub_subject_seq.nextval,'메세지및 이벤트처리','Spring');
insert into sub_subject values(sub_subject_seq.nextval,'어노테이션 및 자바코드 설정','Spring');
insert into sub_subject values(sub_subject_seq.nextval,'스프링 AOP','Spring');
insert into sub_subject values(sub_subject_seq.nextval,'MVC 이용한 웹 요청처리','Spring');
insert into sub_subject values(sub_subject_seq.nextval,'DB연동및 JDBC','Spring');
insert into sub_subject values(sub_subject_seq.nextval,'트랜잭션관리','Spring');
insert into sub_subject values(sub_subject_seq.nextval,'ORM 연동지원','Spring');

insert into subject values('Junit/TDD');
insert into cclass values(c_seq.nextval,1,'Junit/TDD',to_date('2017-05-12', 'yyyy-mm-dd'),to_date('2017-05-17','yyyy-mm-dd'));
insert into sub_subject values(sub_subject_seq.nextval,'테스트 주도 개발 ','Junit/TDD');
insert into sub_subject values(sub_subject_seq.nextval,'Test with JUnit ','Junit/TDD');


insert into subject values('Android');
insert into cclass values(c_seq.nextval,1,'Android',to_date('2017-05-18', 'yyyy-mm-dd'),to_date('2017-06-01','yyyy-mm-dd'));
insert into sub_subject values(sub_subject_seq.nextval,'안드로이드 개요및 개발환경','Android');
insert into sub_subject values(sub_subject_seq.nextval,'View 개요','Android');
insert into sub_subject values(sub_subject_seq.nextval,'레이아웃 개요','Android');
insert into sub_subject values(sub_subject_seq.nextval,'고급 위젯','Android');
insert into sub_subject values(sub_subject_seq.nextval,'메뉴와 대화상자','Android');
insert into sub_subject values(sub_subject_seq.nextval,'파일처리','Android');
insert into sub_subject values(sub_subject_seq.nextval,'그래픽과이미지','Android');
insert into sub_subject values(sub_subject_seq.nextval,'액티비티와인텐트','Android');
insert into sub_subject values(sub_subject_seq.nextval,'어댑터뷰','Android');
insert into sub_subject values(sub_subject_seq.nextval,'4대 컴포넌트','Android');

insert into subject values('UML');
insert into cclass values(c_seq.nextval,1,'UML',to_date('2017-06-02', 'yyyy-mm-dd'),to_date('2017-06-09','yyyy-mm-dd'));
insert into sub_subject values(sub_subject_seq.nextval,'UML이란','UML');
insert into sub_subject values(sub_subject_seq.nextval,'유스케이스 다이어그램','UML');
insert into sub_subject values(sub_subject_seq.nextval,'모델링 절차','UML');
insert into sub_subject values(sub_subject_seq.nextval,'클래스 간의관계','UML');
insert into sub_subject values(sub_subject_seq.nextval,'순차다이어그램','UML');
insert into sub_subject values(sub_subject_seq.nextval,'통신다이어그램','UML');
